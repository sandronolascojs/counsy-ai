services:
  db:
    image: postgres:16-alpine
    ports:
      - 5432:5432
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    volumes:
      - .postgres_data:/var/lib/postgresql/data
    networks:
      - app-network

  localstack:
    image: localstack/localstack:latest
    ports:
      - 4566:4566 # edge
    environment:
      - SERVICES=sns,sqs,s3
      - AWS_DEFAULT_REGION=us-east-1
      - DEBUG=0
      - DOCKER_HOST=unix:///var/run/docker.sock
      - NOTIFICATIONS_TOPIC_NAME=notifications-topic
      - PERSISTENCE=1
      - LAMBDA_EXECUTOR=docker
    volumes:
      - ./local/aws/init:/etc/localstack/init/ready.d
      - /var/run/docker.sock:/var/run/docker.sock
      - localstack-data:/var/lib/localstack
    networks:
      - app-network
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:4566/_localstack/health']
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  aws-init:
    image: amazon/aws-cli:2.13.0
    depends_on:
      localstack:
        condition: service_healthy
    environment:
      - AWS_ACCESS_KEY_ID=test
      - AWS_SECRET_ACCESS_KEY=test
      - AWS_DEFAULT_REGION=us-east-1
      - AWS_ENDPOINT_URL=http://localstack:4566
      - AWS_CA_BUNDLE=
    volumes:
      - ./local/aws/init:/scripts
    command: ['/scripts/setup-queues.sh']
    networks:
      - app-network

volumes:
  localstack-data:

networks:
  app-network:
    driver: bridge
