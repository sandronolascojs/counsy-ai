name: Dependabot CI and Reporting

on:
  pull_request:
    branches: [development]
    types: [opened, synchronize, reopened, labeled, edited]

permissions:
  contents: write
  pull-requests: write

jobs:
  test-and-summarize:
    if: github.actor == 'dependabot[bot]'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'

      - name: Enable corepack
        run: corepack enable

      - name: Install dependencies (workspace)
        run: pnpm -w install --frozen-lockfile

      - name: Run tests across workspaces (if present)
        run: pnpm -w -r run test --if-present

      - name: Fetch Dependabot metadata
        id: metadata
        uses: dependabot/fetch-metadata@v2
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Comment dependency update summary
        if: always()
        uses: actions/github-script@v7
        with:
          script: |
            const { data: pr } = await github.rest.pulls.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.payload.pull_request.number,
            });

            const deps = core.getInput('dependency-names') || process.env.DEP_NAMES;
            const updateType = process.env.UPDATE_TYPE;
            const ecosystem = process.env.PACKAGE_ECOSYSTEM;

            const body = [
              '### Dependabot Update Summary',
              '',
              `- Ecosystem: **${ecosystem || 'unknown'}**`,
              `- Update type: **${updateType || 'unknown'}**`,
              `- Dependencies: **${deps || 'n/a'}**`,
              '',
              'This PR was automatically tested across the monorepo workspaces using `pnpm -w -r run test --if-present`.\nIf any package exposes tests, they were executed.',
            ].join('\n');

            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: pr.number,
              body,
            });
        env:
          DEP_NAMES: ${{ steps.metadata.outputs.dependency-names }}
          UPDATE_TYPE: ${{ steps.metadata.outputs.update-type }}
          PACKAGE_ECOSYSTEM: ${{ steps.metadata.outputs.package-ecosystem }}

  breaking-change-notify-pr:
    name: Open notification PR for semver-major updates
    needs: [test-and-summarize]
    if: github.actor == 'dependabot[bot]'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Fetch Dependabot metadata
        id: metadata
        uses: dependabot/fetch-metadata@v2
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Prepare notification content
        id: prep
        if: steps.metadata.outputs.update-type == 'version-update:semver-major'
        run: |
          pr_number=${{ github.event.pull_request.number }}
          branch_name="dependabot-major-alert/pr-${pr_number}"
          file_path=".github/dependabot/alerts/pr-${pr_number}-breaking.md"
          mkdir -p "$(dirname "$file_path")"
          cat > "$file_path" << 'EOF'
          # Dependabot Major Update Notification

          This repository received a Dependabot PR with a semver-major update.

          Details:
          - Source PR: #${{ github.event.pull_request.number }}
          - Dependencies: ${{ steps.metadata.outputs.dependency-names }}
          - Ecosystem: ${{ steps.metadata.outputs.package-ecosystem }}
          - Update type: ${{ steps.metadata.outputs.update-type }}

          Please review for potential breaking changes.
          EOF
          echo "branch_name=$branch_name" >> $GITHUB_OUTPUT

      - name: Create notification PR
        if: steps.metadata.outputs.update-type == 'version-update:semver-major'
        uses: peter-evans/create-pull-request@v6
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: 'chore(dependabot): notify breaking update for #${{ github.event.pull_request.number }}'
          branch: ${{ steps.prep.outputs.branch_name }}
          base: development
          title: 'chore(dependabot): notification for breaking update in #${{ github.event.pull_request.number }}'
          body: |
            This is an automated notification PR indicating a semver-major update detected by Dependabot in #${{ github.event.pull_request.number }}.

            Dependencies: ${{ steps.metadata.outputs.dependency-names }}
            Ecosystem: ${{ steps.metadata.outputs.package-ecosystem }}
            Update type: ${{ steps.metadata.outputs.update-type }}

            Review and merge after assessing impact.
          add-paths: |
            .github/dependabot/alerts/**
